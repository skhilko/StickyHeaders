{"version":3,"sources":["main.js","jquery-plugin.js"],"names":["$","window","document","undefined","StickyHeaders","el","options","this","element","stuckHeadersHeight","listOffset","getBoundingClientRect","top","headers","Array","prototype","map","call","querySelectorAll","headerSelector","header","i","clientRect","clone","cloneNode","classList","add","style","height","headerContainerHeight","dataset","index","bottom","bind","_createHeaderContainer","addEventListener","onScroll","Plugin","init","SCROLL_WIDTH","scrollDiv","createElement","className","body","appendChild","scrollbarWidth","offsetWidth","clientWidth","removeChild","SCROLL_STEP_DEFAULT","LINE_HEIGHT","headerWrap","right","headerContainer","onHeaderActivate","onHeaderScroll","parentNode","insertBefore","ev","target","contains","parseInt","targetHeader","scrollOffset","scrollTop","shiftAmount","forEach","isWithinHeaderContainer","transform","scrollDelta","deltaMode","WheelEvent","DOM_DELTA_PIXEL","deltaY","DOM_DELTA_LINE","preventDefault","pluginName","akno","destroy","removeData","fn","args","arguments","dataKey","each","data","instance","isFunction","apply","slice","jQuery"],"mappings":"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","file":"stickies.jquery.min.js","sourcesContent":["/* global WheelEvent */\n'use strict';\n\nvar SCROLL_WIDTH = (function() {\n    var scrollDiv = document.createElement('div');\n    scrollDiv.className = 'js-scrollbar-measure';\n    document.body.appendChild(scrollDiv);\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n})();\n\nvar SCROLL_STEP_DEFAULT = 50;\nvar LINE_HEIGHT = 16;\n\n/**\n * This plugin enables sticky section headings on a list element.\n *\n * Supported browsers: Chrome, FF, Safari, IE11+\n *\n * @param el - list dom element\n * @param options - an option object. Supports:\n *   - headerSelector - a selector string matching header elements\n */\nfunction StickyHeaders(el, options) {\n    this.element = el;\n    this.options = options;\n    this.stuckHeadersHeight = 0;\n\n    var listOffset = el.getBoundingClientRect().top;\n\n    // this.headers contains clone elements references and cached dimensions for faster scroll handling\n    this.headers = Array.prototype.map.call(el.querySelectorAll(this.options.headerSelector), (function(header, i) {\n        var clientRect = header.getBoundingClientRect();\n        var clone = header.cloneNode(true);\n        clone.classList.add('stickies-header', 'is-stuck');\n        // explicitly define the height for the clone, just in case it was applied on the original element\n        // via a selector which is no longer affecting the clone\n        //\n        clone.style.height = clientRect.height + 'px';\n        // TODO all clones must be of equal height\n        this.headerContainerHeight = clientRect.height;\n\n        clone.dataset.index = i;\n        return {\n            top: clientRect.top - listOffset,\n            bottom: clientRect.bottom - listOffset,\n            height: clientRect.height,\n            el: clone\n        };\n    }).bind(this));\n\n    this._createHeaderContainer();\n\n    el.addEventListener('scroll', this.onScroll.bind(this));\n}\n\nStickyHeaders.prototype._createHeaderContainer = function() {\n    var header = document.createElement('div');\n    header.className = 'stickies-container';\n\n    var headerWrap = document.createElement('div');\n    headerWrap.className = 'stickies-container-inner';\n    headerWrap.style.right = SCROLL_WIDTH + 'px';\n    headerWrap.style.height = this.headerContainerHeight + 'px';\n    header.appendChild(headerWrap);\n\n    var headerContainer = this.headerContainer = document.createElement('div');\n    headerWrap.appendChild(headerContainer);\n\n    header.addEventListener('click', this.onHeaderActivate.bind(this));\n    header.addEventListener('wheel', this.onHeaderScroll.bind(this));\n\n    this.element.parentNode.insertBefore(header, this.element);\n};\n\nStickyHeaders.prototype.onHeaderActivate = function(ev) {\n    if (ev.target.classList.contains('is-stuck')) {\n        var index = parseInt(ev.target.dataset.index, 10);\n        var targetHeader = this.headers[index];\n        var scrollOffset = 0;\n        for (var i = 0; i <= index; i++) {\n            scrollOffset += this.headers[i].height;\n        }\n\n        // Scrollable area is reduces by the height of stuck headers.\n        // Need to account for that when jumping to the new position.\n        this.element.scrollTop = targetHeader.bottom - scrollOffset;\n    }\n};\n\nStickyHeaders.prototype.onScroll = function() {\n    var scrollTop = this.element.scrollTop;\n    var shiftAmount = 0;\n\n    this.headers.forEach(function(header) {\n        if (!header.el.parentNode) {\n            if (header.top <= scrollTop) {\n                this.headerContainer.appendChild(header.el);\n                this.stuckHeadersHeight -= header.height;\n            }\n        } else if (header.el.parentNode) {\n            if (header.top >= scrollTop) {\n                this.headerContainer.removeChild(header.el);\n                this.stuckHeadersHeight += header.height;\n            }\n        }\n\n        if (this.isWithinHeaderContainer(header, scrollTop)) {\n            // the distance between the top of the scrollable area and the header top\n            // minus the height of the header container gives the shift amount\n            // for the stuck headers on in order to have an effect of a 'replacement'\n            // of the old header with a new one\n            shiftAmount = (header.top - scrollTop) - this.headerContainerHeight;\n        }\n    }, this);\n\n    shiftAmount += this.stuckHeadersHeight + this.headerContainerHeight;\n\n    this.headerContainer.style.transform = 'translateY(' + shiftAmount + 'px)';\n};\n\nStickyHeaders.prototype.onHeaderScroll = function(ev) {\n    var scrollDelta = 0;\n    switch (ev.deltaMode) {\n        case WheelEvent.DOM_DELTA_PIXEL:\n            scrollDelta = ev.deltaY;\n            break;\n        case WheelEvent.DOM_DELTA_LINE:\n            scrollDelta = LINE_HEIGHT * ev.deltaY;\n            break;\n        default:\n            scrollDelta = SCROLL_STEP_DEFAULT;\n    }\n    this.element.scrollTop += scrollDelta;\n    // prevent the viewport from scrolling\n    ev.preventDefault();\n};\n\nStickyHeaders.prototype.isWithinHeaderContainer = function(header, scrollTop) {\n    return header.top > scrollTop && header.top <= this.headerContainerHeight + scrollTop;\n};\n","var pluginName = 'stickies';\n\nfunction Plugin(element, options) {\n    this.element = element;\n    this.options = options;\n    this.init();\n}\n\nPlugin.prototype.init = function() {\n    this.akno = new StickyHeaders(this.element, this.options);\n};\n\nPlugin.prototype.destroy = function() {\n    this.akno.destroy();\n    $.removeData(this.element, 'plugin_' + pluginName);\n    this.element = null;\n};\n\n$.fn[pluginName] = function(options) {\n    var args = arguments;\n    var dataKey = 'plugin_' + pluginName;\n    if (options === undefined || typeof options === 'object') {\n        return this.each(function() {\n            if (!$.data(this, dataKey)) {\n                $.data(this, dataKey, new Plugin(this, options));\n            }\n        });\n    } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {\n        return this.each(function() {\n            var instance = $.data(this, dataKey);\n            if (instance instanceof Plugin) {\n                // call with the widget instance if not on the plugin\n                if(!$.isFunction(instance[options]) && $.isFunction(instance.akno[options])) {\n                    instance = instance.akno;\n                }\n                instance[options].apply(instance, Array.prototype.slice.call(args, 1));\n            }\n        });\n    }\n};\n"],"sourceRoot":"/source/"}